---
name: Build - Ubuntu

on:
  pull_request:
  push:
    branches:
      - master
      - dev
      - devel
      - develop

env:
  VCPKG_BUILD_TYPE: release
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        buildtype: [Debug, RelWithDebInfo]
        include:
          - os: ubuntu-18.04
            triplet: x64-linux
          - os: ubuntu-20.04
            triplet: x64-linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Linux Dependencies
        run: >
          sudo apt-get update && sudo apt-get install ccache build-essential
          libluajit-5.1-dev zip

      - name: CCache
        id: ccache
        uses: actions/cache@v2
        with:
          path: /home/runner/.ccache
          key: ccache-${{ matrix.os }}-${{ matrix.buildtype }}-${{ hashFiles('**/src') }}
          restore-keys: |
            ccache-${{ matrix.os }}-${{ matrix.buildtype }}-
            ccache-${{ matrix.os }}-

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: true
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          additionalCachedPaths: ${{ github.workspace }}/build/vcpkg_installed
          vcpkgGitCommitId: 653912591af709c162fba2d4000a6b3362c8d3c9

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Run CMake
        uses: lukka/run-cmake@v3
        with:
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          useVcpkgToolchainFile: true
          buildDirectory: ${{ github.workspace }}/build/
          cmakeBuildType: ${{ matrix.buildtype }}

      - name: Prepare artifact contents
        shell: bash
        run: |
          ccache -s
          mv config.lua.dist config.lua
          mv build/bin/canary .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-canary-amd64-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}
            !${{ github.workspace }}/build/
            !${{ github.workspace }}/vcpkg/
            !${{ github.workspace }}/.git/
            !${{ github.workspace }}/.github/
            !${{ github.workspace }}/.appveyor.yml
            !${{ github.workspace }}/.editorconfig
            !${{ github.workspace }}/.gitignore
            !${{ github.workspace }}/.reviewdog.yml
            !${{ github.workspace }}/.travis.yml
            !${{ github.workspace }}/tests/
            !${{ github.workspace }}/cmake/
            !${{ github.workspace }}/sonar-project.properties
            !${{ github.workspace }}/Jenkinsfile
            !${{ github.workspace }}/GitVersion.yml
